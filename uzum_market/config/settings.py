"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.6.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
import os
from pathlib import Path
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent



from dotenv import load_dotenv
import os

load_dotenv()
# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_filters',


    'rest_framework',
    'custom_auth',
    'products',


]

ROOT_URLCONF = 'config.urls'

# AUTH_USER_MODEL = 'custom_auth.User'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


DATABASES = {
    'default':{
        'ENGINE':'django.db.backends.postgresql',
        'NAME':'market_db',
        'USER':'market',
        'PASSWORD':'market',
        'HOST':'localhost',
        'PORT':'5432',
    }
}


AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True




STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR / "static"]



DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE':15,


    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
##############################################################

}



# CORS SOZLAMALARI
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",
    "http://127.0.0.1:3000",
]

CORS_ALLOW_CREDENTIALS = True


# Bu ham delete

# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'  # Gmail misol uchun
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'inomov4084@gmail.com'
# EMAIL_HOST_PASSWORD = 'qglxxdiwqbpfexyg'


# AUTH_USER_MODEL = 'custom_auth.User'





# DJOSER EMAILGA TASDIQLASH KODI BORISHI UCHUN "PAROLNI UNUTDINGIZMI  DEGANIDA"
# DJOSER = {
#     "SEND_ACTIVATION_EMAIL": True,  # ro‘yxatdan o‘tishda email yuboriladi
#     "ACTIVATION_URL": "activate/{uid}/{token}",  # emailda yuboriladigan link
#     "PASSWORD_RESET_CONFIRM_URL": "password/reset/confirm/{uid}/{token}/",
#     "USERNAME_RESET_CONFIRM_URL": "username/reset/confirm/{uid}/{token}/",
#     "SERIALIZERS": {},
# }


# ✅ TO'LIQ VERSIYA:
STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
STATIC_ROOT = BASE_DIR / 'staticfiles'  # ✅ Production uchun


CELERY_BROKER_URL = os.environ.get('CELERY_BROKER_URL') # celery ishlarni qayerga yuborishi uchun
CELERY_RESULT_BACKEND = os.environ.get('CELERY_RESULT_BACKEND') # celery bajarilgan ishlarni natijasini qayerga saqlashini belgilaydi




MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# USER QAYERGA BORISHINI BELGILASH  , login dan otsa categotiesga boradi , logout qilsa yana login pagega boradi
LOGIN_URL = '/auth/login/'
LOGIN_REDIRECT_URL = ''
LOGOUT_REDIRECT_URL = '/auth/login/'

CHAT_ID = os.environ.get('CHAT_ID')
TELEGRAM_BOT_TOKEN = os.environ.get('TELEGRAM_BOT_TOKEN')


